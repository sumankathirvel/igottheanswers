{"version":3,"sources":["firebase.js","components/auth/Login.js","features/userSlice.js","components/QuorBox.js","features/questionSlice.js","components/Post.js","components/Feed.js","components/QHeader.js","components/Quora.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","provider","GoogleAuthProvider","db","firestore","Login","useState","email","setEmail","password","setPassword","className","src","alt","onClick","signInWithPopup","catch","e","alert","message","value","onChange","target","type","placeholder","preventDefault","signInWithEmailAndPassword","then","console","log","createUserWithEmailAndPassword","userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","QuorBox","useSelector","Avatar","photo","displayName","questionSlice","questionId","questionName","setQuestionInfo","selectQuestionId","question","Post","Id","imageUrl","timestamp","users","dispatch","useDispatch","IsmodalOpen","setIsModalOpen","answer","setAnswer","getAnswers","setGetAnswers","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","id","answers","data","Date","toDate","toLocaleString","isOpen","onRequestClose","shouldCloseOnOverlayClick","style","overlay","width","height","backgroundColor","zIndex","top","left","marginTop","marginLeft","add","FieldValue","serverTimestamp","position","paddingBottom","color","fontSize","display","right","Feed","posts","setPosts","mytopic","setMytopic","questions","Modal","setAppElement","QHeader","input","setInput","inputUrl","setInputUrl","topic","setTopic","signOut","Button","href","disPlayName","Input","Link","Quora","App","onAuthStateChanged","authUser","uid","photoURL","configureStore","reducer","userReducer","questionReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a312e631.chunk.js","sourcesContent":["import firebase from \"firebase\";\nimport \"firebase/storage\"\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA8sZrP0n23kvysTM9aHux1vtwL4UN_LW8\",\n  authDomain: \"i-got-the-answer.firebaseapp.com\",\n  databaseURL: \"https://i-got-the-answer-default-rtdb.firebaseio.com\",\n  projectId: \"i-got-the-answer\",\n  storageBucket: \"i-got-the-answer.appspot.com\",\n  messagingSenderId: \"485172474700\",\n  appId: \"1:485172474700:web:ae053d0e470239bc0e15e9\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\nconst db = firebaseApp.firestore();\n\n\n\n\nexport { auth, provider };\nexport default db;\n\n\n","import React, { useState } from \"react\";\nimport \"./Login.css\";\n\nimport { auth, provider } from \"../../firebase\";\n\nfunction Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const signIn = () => {\n    auth.signInWithPopup(provider).catch((e) => {\n      alert(e.message);\n    });\n  };\n\n  const handleSignIn = (e) => {\n    e.preventDefault();\n\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then((auth) => {\n        console.log(auth);\n      })\n      .catch((e) => alert(e.message));\n  };\n\n  const registerSignIn = (e) => {\n    e.preventDefault();\n\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((auth) => {\n        if (auth) {\n          console.log(auth);\n        }\n      })\n      .catch((e) => alert(e.message));\n  };\n  return (\n    <div className=\"login\">\n      <div className=\"login__container\">\n        <div className=\"login__logo\">\n       \n        </div>\n        <div className=\"login__desc\">\n          <h1>I Got the Answer</h1>\n          \n          \n        </div>\n        <div className=\"login__auth\">\n          <div className=\"login__authOptions\">\n            <div className=\"login__authOption\">\n              <img\n                className=\"login__googleAuth\"\n                src=\"https://media-public.canva.com/MADnBiAubGA/3/screen.svg\"\n                alt=\"\"\n              />\n              <p onClick={signIn}>Continue With Google</p>\n            </div>\n            <div className=\"login__authOption\">\n             \n              <span>Welcome..... share your answer and questions accross globle and gain your knowlege and live better..............</span>\n            </div>\n            <div className=\"login__authDesc\">\n            \n            </div>\n          </div>\n          <div className=\"login__emailPass\">\n            <div className=\"login__label\">\n              <h4>Login</h4>\n            </div>\n            <div className=\"login__inputFields\">\n              <div className=\"login__inputField\">\n                <input\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  type=\"text\"\n                  placeholder=\"Email\"\n                />\n              </div>\n              <div className=\"login__inputField\">\n                <input\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  type=\"password\"\n                  placeholder=\"Password\"\n                />\n              </div>\n            </div>\n            <div className=\"login__forgButt\">\n              <small>REGISTER YOU ACCOUNT........</small>\n              <button onClick={handleSignIn}>Login</button>\n            </div >\n            <button onClick={registerSignIn}>Register</button>\n          </div>\n        </div>\n      \n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    user: null,\n  },\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    },\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\n\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import { Avatar } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nimport \"./QuoraBox.css\";\n\nexport default function QuorBox() {\n  const user = useSelector(selectUser);\n\n  return (\n    <div className=\"quoraBox\">\n      <div className=\"quoraBox__info\">\n        <Avatar\n          src={\n            user.photo\n              ? user.photo\n              : \"https://images-platform.99static.com//_QXV_u2KU7-ihGjWZVHQb5d-yVM=/238x1326:821x1909/fit-in/500x500/99designs-contests-attachments/119/119362/attachment_119362573\"\n          }\n          className=\"quoraBox__infoAvatar\"\n        />\n        <h5>{user.displayName ? user.displayName : user.email}</h5>\n      </div>\n      <div className=\"quoraBox__quora\">\n        <p>click on the questions to see the reply by the other user......</p>\n      </div>\n    </div>\n  );\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const questionSlice = createSlice({\n  name: \"question\",\n  initialState: {\n    questionId: null,\n    questionName: null,\n  },\n  reducers: {\n    setQuestionInfo: (state, action) => {\n      state.questionId = action.payload.questionId;\n      state.questionName = action.payload.questionName;\n    },\n  },\n});\n\nexport const { setQuestionInfo } = questionSlice.actions;\n\nexport const selectQuestionId = (state) => state.question.questionId;\nexport const selectQuestionName = (state) => state.question.questionName;\n\nexport default questionSlice.reducer;\n","import { Avatar } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Post.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nimport Modal from \"react-modal\";\nimport db from \"../firebase\";\nimport { selectQuestionId, setQuestionInfo } from \"../features/questionSlice\";\nimport firebase from \"firebase\";\n\nfunction Post({ Id, question, imageUrl, timestamp, users }) {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  const [IsmodalOpen, setIsModalOpen] = useState(false);\n  const questionId = useSelector(selectQuestionId);\n  const [answer, setAnswer] = useState(\"\");\n  const [getAnswers, setGetAnswers] = useState([]);\n\n  useEffect(() => {\n    if (questionId) {\n      db.collection(\"questions\")\n        .doc(questionId)\n        .collection(\"answer\")\n        .orderBy(\"timestamp\", \"desc\")\n        .onSnapshot((snapshot) =>\n          setGetAnswers(\n            snapshot.docs.map((doc) => ({ id: doc.id, answers: doc.data() }))\n          )\n        );\n    }\n  }, [questionId]);\n\n  const handleAnswer = (e) => {\n    e.preventDefault();\n\n    if (questionId) {\n      db.collection(\"questions\").doc(questionId).collection(\"answer\").add({\n        user: user,\n        answer: answer,\n        questionId: questionId,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      });\n    }\n    console.log(questionId);\n    setAnswer(\"\");\n    setIsModalOpen(false);\n  };\n  return (\n    <div\n      className=\"post\"\n      onClick={() =>\n        dispatch(\n          setQuestionInfo({\n            questionId: Id,\n            questionName: question,\n          })\n        )\n      }\n    >\n      <div className=\"post__info\">\n        <Avatar\n          src={\n            users.photo\n              ? users.photo\n              : \"https://images-platform.99static.com//_QXV_u2KU7-ihGjWZVHQb5d-yVM=/238x1326:821x1909/fit-in/500x500/99designs-contests-attachments/119/119362/attachment_119362573\"\n          }\n        />\n        <h4>{users.displayName ? users.displayName : users.email}</h4>\n        <small>{new Date(timestamp?.toDate()).toLocaleString()}</small>\n      </div>\n      <div className=\"post__body\">\n        <div className=\"post__question\">\n          <p>{question}</p>\n          <button\n            onClick={() => setIsModalOpen(true)}\n            className=\"post__btnAnswer\"\n          >\n            Answer\n          </button>\n          <Modal\n            isOpen={IsmodalOpen}\n            onRequestClose={() => setIsModalOpen(false)}\n            shouldCloseOnOverlayClick={false}\n            style={{\n              overlay: {\n                width: 680,\n                height: 550,\n                backgroundColor: \"rgba(0,0,0,0.8)\",\n                zIndex: \"1000\",\n                top: \"50%\",\n                left: \"50%\",\n                marginTop: \"-250px\",\n                marginLeft: \"-350px\",\n              },\n            }}\n          >\n            <div className=\"modal__question\">\n              <h1>{question}</h1>\n              <p>\n                asked by{\" \"}\n                <span className=\"name\">\n                  {users.displayName ? users.displayName : users.email}\n                </span>{\" \"}\n                {\"\"}\n                on{\" \"}\n                <span className=\"name\">\n                  {new Date(timestamp?.toDate()).toLocaleString()}\n                </span>\n              </p>\n            </div>\n            <div className=\"modal__answer\">\n              <textarea\n                value={answer}\n                onChange={(e) => setAnswer(e.target.value)}\n                placeholder=\"Enter Your Answer\"\n                type=\"text\"\n              />\n            </div>\n            <div className=\"modal__button\">\n              <button className=\"cancle\" onClick={() => setIsModalOpen(false)}>\n                Cancel\n              </button>\n              <button type=\"sumbit\" onClick={handleAnswer} className=\"add\">\n                Add Answer\n              </button>\n            </div>\n          </Modal>\n        </div>\n        <div className=\"post__answer\">\n          {getAnswers.map(({ id, answers }) => (\n            <p key={id} style={{ position: \"relative\", paddingBottom: \"5px\" }}>\n              {Id === answers.questionId ? (\n                <span>\n                  {answers.answer}\n                  <br />\n                  <span\n                    style={{\n                      position: \"absolute\",\n                      color: \"gray\",\n                      fontSize: \"small\",\n                      display: \"flex\",\n                      right: \"0px\",\n                    }}\n                  >\n                    <span style={{ color: \"#b92b27\" }}>\n                      {answers.user.displayName\n                        ? answers.user.displayName\n                        : answers.user.email}{\" \"}\n                      on{\" \"}\n                      {new Date(answers.timestamp?.toDate()).toLocaleString()}\n                    </span>\n                  </span>\n                </span>\n              ) : (\n                \"\"\n              )}\n            </p>\n          ))}\n        </div>\n        <img src={imageUrl} alt=\"\" />\n      </div>\n     \n    </div>\n  );\n}\n\nexport default Post;\n","import React, { useEffect, useState } from \"react\";\nimport QuorBox from \"./QuorBox\";\nimport \"./Feed.css\";\nimport Post from \"./Post\";\nimport db from \"../firebase\";\n\nfunction Feed() {\n  const [posts, setPosts] = useState([]);\n  const [mytopic,setMytopic]=useState(\"questions\")\n  useEffect(() => {\n    \n    db.collection(mytopic)\n   \n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) =>\n        setPosts(\n          snapshot.docs.map((doc) => ({ \n            id: doc.id,\n            questions: doc.data(),\n          }))\n        )\n      );\n  }, [mytopic]);\n\n  return (\n    <div className=\"feed\">\n      <div className=\"chngesub\">\n      <button className=\"btndis\" onClick={()=>{ setMytopic(\"questions\")}} >General</button>\n      <button  className=\"btndis\" onClick={()=>{ setMytopic(\"cse\")}} >CSE</button>\n      <button  className=\"btndis\" onClick={()=>{ setMytopic(\"ece\")}} >ECE</button>\n      <button  className=\"btndis\" onClick={()=>{ setMytopic(\"eee\")}} >EEE</button>\n      <button  className=\"btndis\" onClick={()=>{ setMytopic(\"mech\")}} >Mech</button>\n      <button  className=\"btndis\" onClick={()=>{ setMytopic(\"aero\")}} >Aero</button>\n      <button  className=\"btndis\" onClick={()=>{ setMytopic(\"auto\")}} >Auto</button>\n      <button  className=\"btndis\" onClick={()=>{ setMytopic(\"it\")}} >It</button>\n      <button  className=\"btndis\" onClick={()=>{ setMytopic(\"isc\")}} >Isc</button>\n      <button  className=\"btndis\" onClick={()=>{ setMytopic(\"tex\")}} >Tex</button>\n      <button  className=\"btndis\" onClick={()=>{ setMytopic(\"ft\")}} >FT</button>\n      </div>\n      <QuorBox />\n      {posts.map(({ id, questions }) => (\n        <Post\n          key={id}\n          Id={id}\n          question={questions.question}\n          imageUrl={questions.imageUrl}\n          timestamp={questions.timestamp}\n          users={questions.user}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Feed;\n","import React, { useState } from \"react\";\n\nimport Modal from \"react-modal\";\n\nimport \"./QHeader.css\";\nimport { Avatar, Button, Input } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nimport db, { auth } from \"../firebase\";\nimport { Link } from \"@material-ui/icons\";\nimport firebase from \"firebase\";\n\nModal.setAppElement(\"#root\");\n\nfunction QHeader() {\n  const user = useSelector(selectUser);\n\n  const [IsmodalOpen, setIsModalOpen] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [inputUrl, setInputUrl] = useState(\"\");\n  const questionName = input;\n const [topic,setTopic]=useState(\"questions\")\n  const handleQuestion = (e) => {\n    e.preventDefault();\n    setIsModalOpen(false);\n\n    if (questionName) {\n      db.collection(topic).add({\n        user: user,\n        question: input,\n        imageUrl: inputUrl,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      });\n    }\n\n    setInput(\"\");\n    setInputUrl(\"\");\n  };\n\n  return (\n    <div className=\"qHeader\">\n      <h1>Welcome To I Got The Answer...........</h1>\n      \n     \n       \n      <div className=\"qHeader__Rem\">\n        <div className=\"qHeader__avatar\">\n          <h7>Logout</h7>\n          <Avatar\n            onClick={() => auth.signOut()}\n            className=\"Avatar\"\n            src={\n              user.photo\n                ? user.photo\n                : \"https://images-platform.99static.com//_QXV_u2KU7-ihGjWZVHQb5d-yVM=/238x1326:821x1909/fit-in/500x500/99designs-contests-attachments/119/119362/attachment_119362573\"\n            }\n          />\n        </div>\n        \n        <Button onClick={() => setIsModalOpen(true)}>Add Question</Button>\n        <div id=\"but\">\n        <a href=\"https://chatglobal19236192.000webhostapp.com/\"><button className=\"btnchat\" onClick=\"dosomething\">Chat Global</button></a>\n        </div>\n        <div id=\"butn\">\n          <a href=\"https://accounts.google.com/signin/v2/identifier?continue=https%3A%2F%2Fmail.google.com%2Fmail%2F&service=mail&sacu=1&rip=1&flowName=GlifWebSignIn&flowEntry=ServiceLogin\"><button className=\"btnmessage\">Message</button></a>\n        </div>\n         <Modal\n          isOpen={IsmodalOpen}\n          onRequestClose={() => setIsModalOpen(false)}\n          shouldCloseOnOverlayClick={false}\n          style={{\n            overlay: {\n              width: 700,\n              height: 600,\n              backgroundColor: \"rgba(0,0,0,0.8)\",\n              zIndex: \"1000\",\n              top: \"50%\",\n              left: \"50%\",\n              marginTop: \"-300px\",\n              marginLeft: \"-350px\",\n            },\n          }}\n          \n        >\n          <div className=\"modal__title\">\n            <h5>Add Question</h5>\n            <h5>Share Link</h5>\n          </div>\n          <div className=\"modal__info\">\n            <Avatar\n              className=\"avatar\"\n              src={\n                user.photo\n                  ? user.photo\n                  : \"https://images-platform.99static.com//_QXV_u2KU7-ihGjWZVHQb5d-yVM=/238x1326:821x1909/fit-in/500x500/99designs-contests-attachments/119/119362/attachment_119362573\"\n              }\n            />\n            <p>{user.disPlayName ? user.disPlayName : user.email} asked</p>\n           \n          </div>\n          <div className=\"modal__Field\">\n            <Input\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              type=\"text\"\n              placeholder=\"Ask Your Question Here.............. \"\n            />\n            <div className=\"modal__fieldLink\">\n              <Link />\n              <input\n                value={inputUrl}\n                onChange={(e) => setInputUrl(e.target.value)}\n                type=\"text\"\n                placeholder=\" click to give the image url here......\"\n              ></input>\n               \n            </div>\n            <h4>click the departments to upload the question in specific fields..........</h4>\n            <div id=\"divup\">\n              <button onClick={()=>{setTopic(\"questions\")}}>\n         general\n       </button>\n       <button onClick={()=>{setTopic(\"cse\")}}>\n         cse\n       </button>\n       <button onClick={()=>{setTopic(\"ece\")}}>\n         ece\n       </button>\n       <button onClick={()=>{setTopic(\"eee\")}}>\n         eee\n       </button>\n       <button onClick={()=>{setTopic(\"mech\")}}>\n         mech\n       </button>\n       <button onClick={()=>{setTopic(\"auto\")}}>\n         auto\n       </button>\n       <button onClick={()=>{setTopic(\"aero\")}}>\n         aero\n       </button>\n       <button onClick={()=>{setTopic(\"it\")}}>\n         It\n       </button>\n       <button onClick={()=>{setTopic(\"tex\")}}>\n         Textile\n       </button>\n       <button onClick={()=>{setTopic(\"isc\")}}>\n         Isc\n       </button>\n       <button onClick={()=>{setTopic(\"ft\")}}>\n         FT\n       </button>\n         </div>\n\n          </div>\n          <div className=\"upid\">\n         <a href=\"https://uplimggeurl.000webhostapp.com/\"><button>upload from device</button></a>\n         </div>\n          <div className=\"modal__buttons\">\n            <button className=\"cancle\" onClick={() => setIsModalOpen(false)}>\n              Cancel\n            </button>\n            <button type=\"sumbit\" onClick={handleQuestion} className=\"add\">\n              Add Question\n            </button>\n          </div>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n\nexport default QHeader;\n","import React from \"react\";\nimport Feed from \"./Feed.js\";\nimport QHeader from \"./QHeader\";\nimport \"./Quora.css\";\n\n\n\nfunction Quora() {\n  return (\n    <div className=\"quora\">\n      <QHeader />\n      <div className=\"quora__content\">\n      \n        <Feed />\n        \n      </div>\n    </div>\n  );\n}\n\nexport default Quora;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./App.css\";\nimport Login from \"./components/auth/Login\";\nimport Quora from \"./components/Quora\";\nimport { login, logout, selectUser } from \"./features/userSlice\";\nimport { auth } from \"./firebase\";\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        dispatch(\n          login({\n            uid: authUser.uid,\n            email: authUser.email,\n            displayName: authUser.displayName,\n            photo: authUser.photoURL,\n          })\n        );\n      } else {\n        dispatch(logout());\n      }\n      console.log(authUser);\n    });\n  }, [dispatch]);\n  return <div className=\"App\">{user ? <Quora /> : <Login />}</div>;\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport userReducer from \"../features/userSlice\";\nimport questionReducer from \"../features/questionSlice\";\n\nexport default configureStore({\n  reducer: {\n    user: userReducer,\n    question: questionReducer,\n  },\n});\n","\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    \n    window.location.hostname === '[::1]' ||\n    \n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    \n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n     \n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n   \n        checkValidServiceWorker(swUrl, config);\n\n       \n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n   \n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n          \n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              \n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n         \n              console.log('Content is cached for offline use.');\n\n    \n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  \n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      \n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        \n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        \n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}