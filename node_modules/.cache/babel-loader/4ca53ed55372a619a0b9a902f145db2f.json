{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\quora-clone-master\\\\src\\\\components\\\\QHeader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Modal from \"react-modal\";\nimport \"./QHeader.css\";\nimport { Avatar, Button, Input } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nimport db, { auth } from \"../firebase\";\nimport { ExpandMore, Link } from \"@material-ui/icons\";\nimport firebase from \"firebase\";\nModal.setAppElement(\"#root\");\n\nfunction QHeader() {\n  _s();\n\n  const user = useSelector(selectUser);\n  const [IsmodalOpen, setIsModalOpen] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [inputUrl, setInputUrl] = useState(\"\");\n  const questionName = input;\n\n  const handleQuestion = e => {\n    e.preventDefault();\n    setIsModalOpen(false);\n\n    if (questionName) {\n      db.collection(\"questions\").add({\n        user: user,\n        question: input,\n        imageUrl: inputUrl,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\n      });\n    }\n\n    setInput(\"\");\n    setInputUrl(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"qHeader\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"heloo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qHeader__Rem\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"qHeader__avatar\",\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          onClick: () => auth.signOut(),\n          className: \"Avatar\",\n          src: user.photo ? user.photo : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setIsModalOpen(true),\n        children: \"Add Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: IsmodalOpen,\n        onRequestClose: () => setIsModalOpen(false),\n        shouldCloseOnOverlayClick: false,\n        style: {\n          overlay: {\n            width: 700,\n            height: 600,\n            backgroundColor: \"rgba(0,0,0,0.8)\",\n            zIndex: \"1000\",\n            top: \"50%\",\n            left: \"50%\",\n            marginTop: \"-300px\",\n            marginLeft: \"-350px\"\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal__title\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Add Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Share Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal__info\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            className: \"avatar\",\n            src: user.photo ? user.photo : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [user.disPlayName ? user.disPlayName : user.email, \" asked\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal__scope\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Public\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ExpandMore, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal__Field\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            value: input,\n            onChange: e => setInput(e.target.value),\n            type: \"text\",\n            placeholder: \"Start your question with 'What', 'How', 'Why', etc. \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal__fieldLink\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: inputUrl,\n              onChange: e => setInputUrl(e.target.value),\n              type: \"text\",\n              placeholder: \"Optional: inclue a link that gives context\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal__buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancle\",\n            onClick: () => setIsModalOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"sumbit\",\n            onClick: handleQuestion,\n            className: \"add\",\n            children: \"Add Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QHeader, \"HNisKH38pCRLPn0EWUxw5WeGPu4=\", false, function () {\n  return [useSelector];\n});\n\n_c = QHeader;\nexport default QHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"QHeader\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/quora-clone-master/src/components/QHeader.js"],"names":["React","useState","SearchIcon","Modal","Avatar","Button","Input","useSelector","selectUser","db","auth","ExpandMore","Link","firebase","setAppElement","QHeader","user","IsmodalOpen","setIsModalOpen","input","setInput","inputUrl","setInputUrl","questionName","handleQuestion","e","preventDefault","collection","add","question","imageUrl","timestamp","firestore","FieldValue","serverTimestamp","signOut","photo","overlay","width","height","backgroundColor","zIndex","top","left","marginTop","marginLeft","disPlayName","email","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Modal from \"react-modal\";\n\nimport \"./QHeader.css\";\nimport { Avatar, Button, Input } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nimport db, { auth } from \"../firebase\";\nimport { ExpandMore, Link } from \"@material-ui/icons\";\nimport firebase from \"firebase\";\n\nModal.setAppElement(\"#root\");\n\nfunction QHeader() {\n  const user = useSelector(selectUser);\n\n  const [IsmodalOpen, setIsModalOpen] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [inputUrl, setInputUrl] = useState(\"\");\n  const questionName = input;\n\n  const handleQuestion = (e) => {\n    e.preventDefault();\n    setIsModalOpen(false);\n\n    if (questionName) {\n      db.collection(\"questions\").add({\n        user: user,\n        question: input,\n        imageUrl: inputUrl,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      });\n    }\n\n    setInput(\"\");\n    setInputUrl(\"\");\n  };\n\n  return (\n    <div className=\"qHeader\">\n      <h1>heloo</h1>\n      \n     \n     \n      <div className=\"qHeader__Rem\">\n        <div className=\"qHeader__avatar\">\n          <Avatar\n            onClick={() => auth.signOut()}\n            className=\"Avatar\"\n            src={\n              user.photo\n                ? user.photo\n                : \"\"\n            }\n          />\n        </div>\n        \n        <Button onClick={() => setIsModalOpen(true)}>Add Question</Button>\n        <Modal\n          isOpen={IsmodalOpen}\n          onRequestClose={() => setIsModalOpen(false)}\n          shouldCloseOnOverlayClick={false}\n          style={{\n            overlay: {\n              width: 700,\n              height: 600,\n              backgroundColor: \"rgba(0,0,0,0.8)\",\n              zIndex: \"1000\",\n              top: \"50%\",\n              left: \"50%\",\n              marginTop: \"-300px\",\n              marginLeft: \"-350px\",\n            },\n          }}\n        >\n          <div className=\"modal__title\">\n            <h5>Add Question</h5>\n            <h5>Share Link</h5>\n          </div>\n          <div className=\"modal__info\">\n            <Avatar\n              className=\"avatar\"\n              src={\n                user.photo\n                  ? user.photo\n                  : \"\"\n              }\n            />\n            <p>{user.disPlayName ? user.disPlayName : user.email} asked</p>\n            <div className=\"modal__scope\">\n              \n              <p>Public</p>\n              <ExpandMore />\n            </div>\n          </div>\n          <div className=\"modal__Field\">\n            <Input\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              type=\"text\"\n              placeholder=\"Start your question with 'What', 'How', 'Why', etc. \"\n            />\n            <div className=\"modal__fieldLink\">\n              <Link />\n              <input\n                value={inputUrl}\n                onChange={(e) => setInputUrl(e.target.value)}\n                type=\"text\"\n                placeholder=\"Optional: inclue a link that gives context\"\n              ></input>\n            </div>\n          </div>\n          <div className=\"modal__buttons\">\n            <button className=\"cancle\" onClick={() => setIsModalOpen(false)}>\n              Cancel\n            </button>\n            <button type=\"sumbit\" onClick={handleQuestion} className=\"add\">\n              Add Question\n            </button>\n          </div>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n\nexport default QHeader;\n"]},"metadata":{},"sourceType":"module"}